import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import csv
import networkx as nx
import os
import random
from itertools import islice
import torch
from scipy.sparse.coo import coo_matrix
import argparse
import math
from random import choice
import community as community_louvain
#变量：B，sn范围,每个sn张数 ，Infectionrate, Roundtime，data文件名

N =67#记得必须改
obn = int(N*0.5)  #有一半的节点可以观测到
observenode = random.sample(range(0,N-1),obn)#每次都随机选还是固定呢
print(obn,observenode)
#p0.5;1034[2021, 1444, 1406, 1786, 2028, 1336, 227, 1334, 1856, 959, 1885, 437, 519, 1788, 916, 550, 1482, 533, 1838, 1020, 655, 720, 1322, 2003, 2064, 1553, 1798, 634, 973, 512, 472, 481, 1970, 1641, 1030, 21, 445, 386, 1326, 1111, 434, 390, 1115, 1165, 1257, 466, 1519, 1922, 1663, 1332, 286, 32, 1073, 1967, 1013, 187, 1649, 342, 1453, 1791, 389, 1293, 1839, 1727, 1716, 1033, 1749, 438, 330, 75, 1318, 993, 1005, 126, 563, 1554, 974, 1212, 1546, 247, 274, 970, 2046, 2059, 59, 1496, 1944, 1280, 1239, 1998, 34, 488, 1151, 653, 351, 1614, 659, 155, 464, 1026, 320, 347, 494, 1928, 824, 914, 419, 154, 1633, 597, 1586, 1917, 738, 1003, 263, 1643, 1099, 1861, 868, 222, 1462, 1181, 932, 373, 812, 397, 362, 1392, 548, 225, 507, 946, 1413, 1501, 587, 1720, 1424, 1438, 763, 253, 1709, 858, 1167, 459, 567, 500, 893, 13, 1472, 1814, 1373, 1262, 918, 189, 193, 920, 710, 402, 1278, 978, 1112, 1361, 1241, 769, 175, 310, 1029, 1753, 1921, 809, 1722, 377, 1902, 1930, 1863, 440, 76, 1141, 1744, 452, 1937, 1233, 783, 556, 1222, 508, 820, 905, 2012, 958, 841, 848, 1897, 1671, 1098, 1837, 1227, 1634, 1900, 47, 823, 1331, 1933, 2056, 568, 486, 1540, 1420, 1192, 1901, 1324, 761, 728, 301, 1045, 336, 930, 194, 872, 1439, 1122, 1473, 998, 726, 951, 217, 888, 44, 2027, 54, 1910, 1682, 691, 1737, 425, 1497, 211, 1116, 1833, 477, 1766, 457, 50, 1493, 346, 579, 1644, 743, 625, 2002, 161, 1819, 483, 778, 1127, 450, 1043, 1872, 1594, 736, 12, 2029, 1070, 1159, 236, 663, 1877, 1040, 856, 1660, 46, 796, 906, 191, 69, 1559, 1191, 52, 1004, 1074, 551, 1957, 1748, 1981, 467, 987, 240, 1247, 1504, 366, 1875, 1769, 1255, 1144, 1064, 664, 1827, 94, 160, 49, 1796, 1966, 1177, 1443, 2049, 256, 607, 344, 620, 237, 273, 1832, 143, 924, 471, 133, 1154, 414, 1578, 909, 1498, 2065, 1927, 616, 1035, 17, 1781, 1768, 383, 1349, 545, 877, 1794, 1355, 1723, 1603, 148, 1825, 1956, 713, 1091, 747, 1242, 1580, 830, 1404, 1460, 241, 2019, 398, 1149, 1777, 1711, 1077, 1002, 1232, 1369, 915, 721, 756, 1597, 927, 150, 1009, 731, 1628, 470, 1289, 1729, 919, 1449, 1083, 1380, 80, 1218, 1213, 2015, 1582, 199, 814, 1150, 1492, 622, 178, 786, 89, 1525, 698, 1357, 1446, 277, 1607, 157, 704, 1055, 1028, 358, 553, 1778, 27, 860, 1662, 894, 1163, 514, 884, 355, 1110, 341, 1419, 1508, 1477, 1092, 1335, 268, 532, 1265, 559, 643, 1891, 490, 984, 444, 1752, 1281, 288, 1656, 558, 1495, 2034, 319, 2037, 571, 1063, 1445, 1044, 1893, 1418, 1256, 1882, 181, 190, 1148, 886, 1069, 1264, 1201, 1137, 1522, 1743, 1479, 1469, 335, 1829, 289, 1760, 619, 74, 1666, 1637, 1894, 295, 1533, 1428, 1347, 1468, 1869, 1189, 943, 38, 969, 1471, 393, 613, 1736, 269, 233, 1432, 496, 1085, 423, 800, 86, 1627, 748, 1734, 1645, 701, 2006, 1865, 1023, 376, 1696, 1260, 1038, 1836, 3, 1524, 939, 208, 1840, 1342, 836, 430, 2047, 1572, 611, 865, 1648, 1951, 531, 1747, 666, 1667, 712, 614, 118, 1678, 361, 1484, 1435, 784, 1129, 895, 1617, 1683, 1962, 965, 228, 844, 484, 1574, 806, 1605, 1509, 585, 100, 1724, 202, 1270, 282, 697, 1078, 1567, 1205, 329, 637, 705, 967, 1936, 536, 201, 1351, 180, 1892, 1622, 1681, 1670, 293, 1160, 1180, 1565, 1142, 1968, 1701, 179, 1726, 859, 197, 520, 986, 257, 1718, 20, 1989, 527, 37, 751, 186, 1226, 706, 318, 1253, 209, 1691, 4, 308, 648, 843, 122, 498, 934, 1294, 365, 1465, 451, 1434, 996, 62, 1467, 658, 15, 897, 2025, 1047, 1054, 1217, 741, 908, 119, 1821, 405, 93, 11, 110, 1403, 223, 1124, 1389, 432, 1168, 79, 1878, 1475, 1378, 230, 1531, 1325, 475, 1672, 941, 1275, 1871, 1759, 316, 575, 262, 762, 1053, 140, 184, 610, 5, 1046, 530, 29, 285, 249, 1007, 421, 242, 1978, 1503, 1268, 1309, 1860, 1451, 1119, 1909, 379, 1581, 1164, 570, 771, 1984, 1569, 1384, 1657, 977, 732, 1297, 963, 1896, 1101, 1382, 549, 1065, 1757, 1442, 18, 1478, 1834, 1153, 595, 1344, 1579, 1646, 476, 1039, 40, 515, 1631, 81, 662, 1517, 1952, 1808, 287, 505, 583, 1319, 1032, 418, 677, 1298, 221, 113, 1175, 129, 246, 1714, 1550, 1843, 1068, 1130, 2024, 350, 333, 1919, 518, 1859, 656, 581, 730, 540, 759, 1374, 1867, 261, 528, 1126, 792, 315, 1651, 1156, 2001, 104, 1095, 1620, 1204, 1000, 1606, 235, 1292, 136, 1288, 281, 542, 1458, 788, 1061, 1136, 1266, 899, 1207, 441, 294, 1948, 562, 975, 593, 889, 742, 90, 2032, 487, 794, 947, 1584, 921, 566, 1845, 983, 338, 107, 1108, 28, 1765, 360, 1888, 670, 85, 42, 936, 1368, 801, 1721, 1398, 77, 195, 1223, 1433, 1816, 675, 1466, 206, 1010, 1415, 543, 1249, 1328, 1986, 504, 302, 16, 1283, 1703, 53, 1694, 272, 1041, 1178, 654, 1430, 1231, 700, 680, 737, 985, 1947, 0, 276, 1001, 231, 940, 314, 586, 1548, 374, 1991, 718, 1252, 1520, 1850, 455, 808, 1939, 340, 1750, 612, 442, 640, 1536, 2045, 1190, 1801, 1353, 1320, 210, 1480, 873, 863, 1770, 207, 661, 510, 1272, 99, 1899, 328, 152, 892, 172, 169, 1306, 1945, 162, 352, 896, 1166, 106, 1352, 2048, 870, 1437, 1779, 629, 348, 688, 937, 1431, 735, 1379, 1625, 1235, 1173, 19, 645, 764, 626, 631, 1535, 1363, 679, 460, 2010, 1587, 1690, 1959, 1719, 1705, 1767, 283, 1793, 754, 88, 1087, 212, 1296, 734, 727, 926, 580, 1254, 672, 1518, 953, 96, 1542, 1715, 1738, 929, 1693, 461, 1564, 297, 1195, 1291, 1185, 1203, 855, 258, 1626, 829, 111, 815, 1818, 1530, 1802, 109, 506, 427, 98, 1237, 2061, 685, 185, 1880, 1792, 1774, 1858, 410, 1481, 1642, 135, 760, 1024, 1105, 264, 1635, 2050, 1243, 972, 1220, 632, 1062, 1407, 1585, 1601, 803, 739, 1809, 1317, 1461, 1385, 1490, 1624, 1107, 1776, 838, 1555, 1456, 1868, 58, 1284, 1904, 1139, 1330, 604, 1134, 60, 1248, 1898, 750, 903, 1486, 1608, 173, 1547, 1345, 981, 64, 278, 1448, 1599, 1733, 554, 364, 1079, 446, 850, 744, 1376, 1772, 1171, 1598, 714, 535, 1996, 1613, 591, 87, 1290, 322, 306, 369, 1842, 407, 1602, 1817, 1427, 1338, 1790, 910]
#p0.1;206 [1195, 635, 1052, 1245, 1304, 33, 40, 636, 1797, 763, 1523, 1241, 848, 1310, 751, 593, 388, 1226, 295, 1283, 1340, 1628, 1774, 1532, 398, 1005, 1280, 701, 846, 936, 1974, 285, 424, 42, 1467, 876, 812, 206, 1821, 1524, 825, 505, 1880, 1369, 1733, 1391, 1849, 1074, 1516, 817, 1202, 971, 1551, 480, 1418, 1767, 1805, 1893, 1986, 1636, 952, 200, 2032, 1966, 1781, 628, 956, 1903, 620, 615, 809, 441, 425, 924, 866, 1992, 1358, 1464, 518, 614, 1203, 1382, 1718, 1303, 1794, 1165, 1205, 1631, 642, 115, 1909, 2012, 1837, 697, 1929, 830, 1873, 353, 1409, 538, 1091, 18, 124, 1817, 1894, 1995, 557, 911, 1902, 1860, 1918, 778, 705, 1213, 1421, 600, 318, 1569, 1605, 252, 493, 693, 1674, 831, 1568, 45, 2061, 1413, 1393, 258, 2022, 867, 566, 1384, 1653, 235, 1306, 386, 1037, 1872, 2013, 1415, 879, 378, 726, 1332, 714, 2041, 67, 198, 483, 668, 73, 451, 32, 704, 1755, 1545, 709, 1603, 1225, 2066, 651, 1432, 1350, 150, 720, 1572, 1655, 93, 31, 1219, 219, 1579, 1220, 1728, 80, 983, 2000, 161, 1716, 706, 1877, 382, 156, 1582, 717, 674, 1453, 1776, 1019, 166, 1333, 1086, 71, 1804, 1847, 686, 880, 1748, 144, 1813, 201, 456, 1726, 526]
# rand_graphs = [30,40,50]
# J=[]
# for j in range(choice(rand_graphs)):
#     J.append(j)
# print(J)

N =62#记得必须改
fname = "dolphins"
# B = np.load(fname+".npy")#读取固定的图
# G = nx.Graph(B)
G = nx.read_edgelist('./'+fname+'_weight.txt',nodetype = int,data=(('weight',float),),create_using=nx.Graph())
adj_matrix = nx.adjacency_matrix(G).todense()
coo_A=coo_matrix(adj_matrix)   #邻接矩阵的边的行/列的坐标
edge_index = [coo_A.row,coo_A.col]
print(edge_index)